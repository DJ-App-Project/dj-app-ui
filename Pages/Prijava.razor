@page "/prijava"
@using Dj.Services
@using Dj.Models
@using System.Text.Json
@using System.Text.Json.Serialization;
@inject AuthService AuthService
@inject AppState AppState
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<PageTitle>Prijava</PageTitle>

<section class="text-center hero">
    <div class="container">
        <h1 class="display-2"><b>Prijava in Registracija</b></h1>
        <p class="lead" style="font-size:1.5rem">
            Prijavite se ali ustvarite nov račun za dostop do aplikacije.
        </p>
    </div>
</section>

<section class="default-page-dark feature-section pb-5" style="padding-top:100px">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <i class="fas fa-sign-in-alt feature-icon"></i>
                        <b style="font-size:1.5rem">Prijava</b>
                    </div>
                    <div class="card-body">
                        <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
                            <div class="form-group">
                                <label for="uporIme">Uporabniško ime</label>
                                <div class="input-icon">
                                    <i class="fas fa-envelope"></i>
                                </div>
                                <InputText id="uporIme"
                                           type="text"
                                           class="form-control"
                                           placeholder="Uporabniško ime"
                                           @bind-Value="loginModel.Username"
                                           required />
                            </div>
                            <div class="form-group">
                                <label for="password">Geslo</label>
                                <div class="input-icon">
                                    <i class="fas fa-lock"></i>
                                </div>
                                <InputText id="password"
                                           type="password"
                                           class="form-control"
                                           placeholder="Geslo"
                                           @bind-Value="loginModel.Password"
                                           required />
                            </div>
                            <button type="submit" class="btn btn-primary button-fancy-blue w-100">
                                Prijava
                            </button>
                        </EditForm>

                        @if (!string.IsNullOrEmpty(message))
                        {
                            <div class="alert alert-danger mt-3">@message</div>
                        }
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <i class="fas fa-user-plus feature-icon"></i> <b style="font-size:1.5rem">Registracija</b>
                    </div>
                    <div class="card-body">
                        <EditForm Model="@loginModel" OnValidSubmit="@HandleRegistration">
                            <div class="form-group">
                                <label for="RegUporIme">Uporabniško ime*</label>
                                <div class="input-icon">
                                    <i class="fas fa-envelope"></i>
                                </div>
                                <InputText id="RegUporIme"
                                           type="text"
                                           class="form-control"
                                           placeholder="Uporabniško ime"
                                           @bind-Value="registerModel.Username"
                                           required />
                            </div>
                            <div class="form-group">
                                <label for="RegEmail">Email*</label>
                                <div class="input-icon">
                                    <i class="fas fa-lock"></i>
                                </div>
                                <InputText id="RegEmail"
                                           class="form-control"
                                           placeholder="Email"
                                           @bind-Value="registerModel.Email"
                                           required />
                            </div>
                            <div class="form-group">
                                <label for="ime">Ime*</label>
                                <div class="input-icon">
                                    <i class="fas fa-lock"></i>
                                </div>
                                <InputText id="ime"
                                           class="form-control"
                                           placeholder="Ime"
                                           @bind-Value="registerModel.Name"
                                           required />
                            </div>
                            <div class="form-group">
                                <label for="priimek">Priimek*</label>
                                <div class="input-icon">
                                    <i class="fas fa-lock"></i>
                                </div>
                                <InputText id="priimek"
                                           class="form-control"
                                           placeholder="Priimek"
                                           @bind-Value="registerModel.FamilyName" 
                                           required />
                            </div>
                            <div class="form-group">
                                <label for="RegPassword">Geslo*</label>
                                <div class="input-icon">
                                    <i class="fas fa-lock"></i>
                                </div>
                                <InputText id="RegPassword"
                                           type="password"
                                           class="form-control"
                                           placeholder="Geslo"
                                           @bind-Value="registerModel.Password"
                                           required />
                            </div>
                            <div class="form-group">
                                <label for="RegPassword2">Ponovite geslo*</label>
                                <div class="input-icon">
                                    <i class="fas fa-lock"></i>
                                </div>
                                <InputText id="RegPassword2"
                                           type="password"
                                           class="form-control"
                                           placeholder="Geslo"
                                           @bind-Value="PasswordCheck"
                                           required />
                            </div>
                            <button type="submit" class="btn btn-secondary button-fancy w-100">Registracija</button>
                        </EditForm>
                        @if (!string.IsNullOrEmpty(registerMessage))
                        {
                            <div class="alert alert-danger mt-3">@registerMessage</div>
                        }
                        @if (!string.IsNullOrEmpty(registerMessageSuccessful))
                        {
                            <div class="alert alert-success mt-3">@registerMessageSuccessful</div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

@code {
    private LoginModel loginModel = new();

    private RegisterModel registerModel = new();

    private string PasswordCheck = string.Empty;

    private string? message;
    private string? registerMessage;
    private string? registerMessageSuccessful;

    private async Task HandleLogin()
    {
        message = null;

        var loginResponse = await AuthService.LoginAsync(
            loginModel.Username,
            loginModel.Password
        );

        if (loginResponse is not null)
        {
            await LocalStorage.SetItemAsync("token", loginResponse.Token);
            await LocalStorage.SetItemAsync("user", loginResponse.User);

            await AppState.SetLoggedInAsync(true, loginResponse.User);

            message = $"Prijava uspešna! Prejeli smo token: {loginResponse.Token}";
            NavigationManager.NavigateTo("/");
        }
        else
        {
            message = "Prijava ni uspela. Preverite podatke.";
        }
    }

    private async Task HandleRegistration()
    {
        registerMessage = null;
        registerMessageSuccessful = null;

        if (registerModel.Password == PasswordCheck)
        {
            var response = await AuthService.RegisterAsync(registerModel.Username, registerModel.Email, registerModel.Name, registerModel.FamilyName, registerModel.Password, registerModel.ImageUrl);

            if (response.IsSuccessStatusCode)
            {
                registerMessageSuccessful = $"Registracija uspešna! Sedaj se lahko prijavite.";
                registerMessage = null;
            }
            else
            {
                registerMessage = "Registracija ni uspela. Preverite podatke.";
                registerMessageSuccessful = null;
            }
        }
        else
        {
            registerMessage = "Gesli se morata ujemati!";
            registerMessageSuccessful = null;
        }
    }

    public class LoginModel
    {
        public string Username { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }

    public class RegisterModel
    {
        [JsonPropertyName("name")]
        public string Name { get; set; } = string.Empty;

        [JsonPropertyName("familyName")]
        public string FamilyName { get; set; } = string.Empty;

        [JsonPropertyName("imageUrl")]
        public string ImageUrl { get; set; } = "https://cdn-icons-png.flaticon.com/512/6342/6342563.png";

        [JsonPropertyName("username")]
        public string Username { get; set; } = string.Empty;

        [JsonPropertyName("email")]
        public string Email { get; set; } = string.Empty;

        [JsonPropertyName("password")]
        public string Password { get; set; } = string.Empty;
    }
}